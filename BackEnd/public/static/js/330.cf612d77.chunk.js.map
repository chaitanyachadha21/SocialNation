{"version":3,"file":"static/js/330.cf612d77.chunk.js","mappings":"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","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js"],"sourcesContent":["import { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport L from \"leaflet\";  // Import Leaflet\r\nimport markerIcon from \"leaflet/dist/images/marker-icon.png\"; \r\nimport markerShadow from \"leaflet/dist/images/marker-shadow.png\";\r\n\r\n// Fix the marker issue by defining a custom icon\r\nconst customIcon = new L.Icon({\r\n  iconUrl: markerIcon,\r\n  shadowUrl: markerShadow,\r\n  iconSize: [25, 41],  // Default size\r\n  iconAnchor: [12, 41], // Adjusts where the marker sits on the map\r\n  popupAnchor: [1, -34], // Adjusts where the popup appears\r\n});\r\n\r\nconst Map = ({ center, zoom }) => {\r\n  return (\r\n    <MapContainer center={[center.lat, center.lng]} zoom={zoom} style={{ height: \"400px\", width: \"100%\" }}>\r\n      <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n      {/* <TileLayer> component in React Leaflet is used to display map tiles(small square image of a larger view of map) from an external tile provider (e.g., OpenStreetMap, Google Maps, Mapbox). It loads small images (tiles) dynamically based on zoom level and location.\r\n\r\n      s is subdomain and helps to load maptiles faster distributes loads in diff servers when required \r\n      z zoom leve;\r\n      x means horizontal coordinates\r\n      y means vertical coordinates*/}\r\n      <Marker position={[center.lat, center.lng]} icon={customIcon}>\r\n        <Popup>This is the selected location.</Popup>\r\n      </Marker>\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/FormElements/Button';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Map from '../../shared/components/UIElements/Map';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\n\r\nimport './PlaceItem.css';\r\n\r\nconst PlaceItem = props => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  \r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async() => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        {Authorization : 'Bearer ' + auth.token}\r\n      );\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      \r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n        >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n          \r\n          <div className=\"place-item__image\">\r\n            <img src={props.image} alt={props.title} />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport './PlaceList.css';\r\nimport Button from '../../shared/FormElements/Button'; \r\n\r\nconst PlaceList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to='/places/new'>Share Places</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {props.items.map(place => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.image}\r\n          title={place.title}\r\n          description={place.description}\r\n          address={place.address}\r\n          creatorId={place.creator}\r\n          coordinates={place.location}\r\n          onDelete={props.onDeletePlace}\r\n\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React , {useEffect , useState} from 'react';\r\n\r\nimport {useParams} from 'react-router-dom'\r\nimport PlaceList from '../components/PlaceList';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\n\r\n\r\n\r\nconst UserPlaces = () => {\r\n  const userId = useParams().userId;\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n     const [loadedPlaces, setLoadedPlaces] = useState();\r\n\r\n    const placeDeletedHandler = deletedPlaceId => {\r\n    setLoadedPlaces(prevPlaces =>\r\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n    \r\n    // useParams() is a React Router hook that extracts dynamic route parameters.\r\n\r\n    useEffect(()=>\r\n    {\r\n      const fetchPlaces = async()=>\r\n      {\r\n        try\r\n      {\r\n      const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\r\n      setLoadedPlaces(responseData.places);\r\n\r\n      \r\n      \r\n      }\r\n      catch (err) {}\r\n      }\r\n      fetchPlaces();\r\n    } , [sendRequest , userId]);\r\n\r\n\r\n    \r\n\r\n  return (\r\n    <>\r\n    <ErrorModal error={error} onClear={clearError} />\r\n          {isLoading && (\r\n            <div className=\"center\">\r\n              <LoadingSpinner />\r\n            </div>\r\n          )}\r\n          {!isLoading && loadedPlaces && (\r\n                  <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\r\n                )}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default UserPlaces;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}// this !! basically converts anything to boolean if something in string so true else false \n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n  // It uses ReactDOM.createPortal to render the modal outside the main app tree (inside #modal-hook).\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequests = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      //AbortController cancels pending fetches when their component unmounts, to keep your app clean and safe.\n      const httpAbortCtrl = new AbortController();\n      activeHttpRequests.current.push(httpAbortCtrl);\n\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortCtrl.signal\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequests.current = activeHttpRequests.current.filter(\n          reqCtrl => reqCtrl !== httpAbortCtrl\n        );\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n"],"names":["customIcon","L","iconUrl","markerIcon","shadowUrl","markerShadow","iconSize","iconAnchor","popupAnchor","_ref","center","zoom","_jsxs","MapContainer","lat","lng","style","height","width","children","_jsx","TileLayer","url","Marker","position","icon","Popup","props","isLoading","error","sendRequest","clearError","useHttpClient","auth","useContext","AuthContext","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","React","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","className","Map","coordinates","inverse","danger","async","process","concat","id","Authorization","token","onDelete","err","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","userId","creatorId","to","showDeleteWarningHandler","items","length","map","place","PlaceItem","creator","location","onDeletePlace","UserPlaces","useParams","loadedPlaces","setLoadedPlaces","useEffect","responseData","places","fetchPlaces","_Fragment","PlaceList","deletedPlaceId","prevPlaces","filter","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","_objectSpread","setIsLoading","setError","activeHttpRequests","useRef","useCallback","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","current","push","response","fetch","signal","json","reqCtrl","ok","Error","message","forEach","abortCtrl","abort"],"sourceRoot":""}